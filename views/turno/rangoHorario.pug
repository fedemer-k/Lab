html 
    head
        link(rel="stylesheet", 
            href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css"
        )
        script(src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js")

        script(src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.15/index.global.min.js')
        script.
            //carga todos los turnos que no son validos
            function loadNonValidTurns(allTurns, nonValidTurns){
                nonValidTurns.forEach(function(nonValidTurn, index){
                    let foundItem = allTurns.find(item => item.start === nonValidTurn);
                    if (foundItem){
                        foundItem.title = "TURNO NO VALIDO";
                        foundItem.url = "";
                        foundItem.color = "white";
                        foundItem.display = "background"
                    }
                })
            }

            //carga todos los turnos ocupados al arreglo de turnos
            function loadOccupiedTurns(allTurns, occupiedTurns){
                occupiedTurns.forEach(function(occupiedTurn, index){
                    let foundItem = allTurns.find(item => item.start === occupiedTurn);
                    if (foundItem){
                        foundItem.title = "TURNO OCUPADO";
                        foundItem.url = "";
                        foundItem.color = "red";
                    }
                })
            }

            //carga todos los turnos ocupados al arreglo de turnos
            function loadWorkingBlocks(allTurns, workingBlocks){
                workingBlocks.forEach(function(workingBlock, index){
                    let foundItem = allTurns.find(item => item.start === workingBlock.start);
                    if (foundItem){
                        foundItem.title = workingBlock.title;
                        foundItem.url = workingBlock.url;
                        foundItem.color = workingBlock.color;
                    }
                })
            }

            //carga todos los turnos que restan de este mes, y de dos meses mas
            function loadAllDaysTurns(allTurns){
                // Fecha actual
                let today = new Date('2024-01-01'); 
                let currentYear = today.getFullYear(); 
                let currentMonth = today.getMonth(); 
                let currentDay = today.getDate() + 1;
                // Array para almacenar los días 
                let daysArray = [];
                // Recorrer el mes actual y los dos siguientes
                for (let i = 0; i < 3; i++){
                    let year = currentYear;
                    let month = currentMonth + i;
                    // Ajustar el año si el mes supera diciembre
                    if(month > 11){
                        month -= 12; year++;
                    }
                    // Obtener la cantidad de días en el mes actual
                    let daysInMonth = new Date(year, month + 1, 0).getDate();
                    // Determinar el día de inicio en el primer mes
                    let startDay = (i === 0) ? currentDay : 1;
                    // Agregar cada día del mes al array desde startDay
                    for(let day = startDay; day <= daysInMonth; day++){
                        let date = new Date(year, month, day);
                        daysArray.push(date);
                    }
                }
                // Imprimir los días 
                daysArray.forEach(date =>{
                    loadAllTurns(date, allTurns);
                    // Formato YYYY-MM-DD
                });
            }

            //Carga todos los turnos del dia ingresado (24 horas, 48 turnos)
            function loadAllTurns(date, allTurns){
                // Obtener el nombre del día de la semana (ej: "Lunes")
                let daysOfWeek = ["Domingo", "Lunes", "Martes", "Miércoles", "Jueves", "Viernes", "Sábado"];
                let dayName = daysOfWeek[date.getDay()];

                //Obtiene el dia completo (ej: "31-01-2004")
                let fullDay = date.toISOString().split('T')[0]

                //Se utiliza como nombre de turno
                let diaTitle = `del dia ${dayName}`
                for (let i = -1; i < 23; i++) {
                    //Guardo la hora para mayor legibilidad
                    let hora = (i+1).toString().padStart(2, '0');
                    let horaSiguiente = (i+2).toString().padStart(2, '0');

                    let primeraMediaHora = { 
                        title: diaTitle, 
                        url: `/solicitud/rango/agregar/#{medico.id_medico}M${fullDay}T${hora}:00:00`, 
                        start: fullDay + "T" + hora + ":00:00", 
                        end: fullDay + "T" + hora + ":30:00"
                    };
                    
                    let segundaMediaHora = { 
                        title: diaTitle,
                        url: `/solicitud/rango/agregar/#{medico.id_medico}M${fullDay}T${hora}:30:00`, 
                        start: fullDay + "T" + hora + ":30:00", 
                        end: fullDay + "T" + horaSiguiente + ":00:00"
                    };

                    allTurns.push(primeraMediaHora);  
                    allTurns.push(segundaMediaHora); 
                }
            }

            document.addEventListener('DOMContentLoaded', function() {
            var calendarEl = document.getElementById('calendar');

            //cargando todos los turnos de este mes y los dos siguientes
            let allTurns = [];
            loadAllDaysTurns(allTurns);

            //cargando los turnos no validos (turnos en los que no se trabaja)
            let nonValidTurns = [
                "2024-11-13T12:00:00",
                "2024-11-13T12:30:00",
                "2024-11-14T12:00:00",
                "2024-11-14T12:30:00",
                "2024-11-15T12:00:00",
                "2024-11-15T12:30:00",
            ];
            loadNonValidTurns(allTurns, nonValidTurns);

            //cargando todos los turnos que ya estan tomados
            let occupiedTurns = [
                "2024-11-13T17:00:00",
                "2024-11-14T15:00:00",
                "2024-11-15T10:00:00",
            ];
            loadOccupiedTurns(allTurns, occupiedTurns);

            //cargando los bloques laborales de este medico
            const workingBlocks = !{JSON.stringify(bloques_horarios)};
            loadWorkingBlocks(allTurns, workingBlocks)

            console.log(allTurns);

            var calendar = new FullCalendar.Calendar(calendarEl, {
                timeZone: 'UTC',
                initialView: 'timeGridFourDay',
                headerToolbar: {
                left: 'prev,next today',
                center: 'title',
                right: 'timeGridFourDay'
                },
                views: {
                timeGridFourDay: {
                    type: 'timeGrid',
                    duration: { days: 7 },
                    buttonText: '7 day'
                }
                },
                locale: 'es',
                dateAlignment: "week",
                hiddenDays: [0,6],
                slotEventOverlap:false,
                events: allTurns,
                allDaySlot: false,
                slotMinTime: "06:00:00",
                slotMaxTime: "20:00:00",
                dayHeaderFormat: { weekday: 'long', omitCommas: true },
                eventColor: 'green',
                initialDate: '2024-01-01'
            });

            calendar.render();

            //- Eliminar el toolbar después de renderizar el calendario 
            var toolbar = document.querySelector('.fc-toolbar.fc-header-toolbar'); 
            if (toolbar) { 
                toolbar.parentNode.removeChild(toolbar); 
            }

            });
    body
        include ../partes/cabezera.pug
        .container
            div(style="justify-content:space-between")
                h1 Modificando rango de horario
                h4 para el medico #{medico.nombres} #{medico.apellidos} (dni:#{medico.dni})
            br
        #calendar